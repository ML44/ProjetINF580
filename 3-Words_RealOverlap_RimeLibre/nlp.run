#nlp.run
model nlp.mod;
data dataGeneration/data/rimes.dat;
data dataGeneration/data/enchainement.dat;
data dataGeneration/data/syllabes.dat;
data dataGeneration/data/index.dat;
data dataGeneration/data/n.dat;

option solver cplex;
option cplex_options "mipdisplay=2";
solve;

for {b in L} {
	for{i in N} {
		if m1_1[b, i] = 1 then {
			if i=0 then {}
			else {printf " %s", index[i];}
		}
	}
}

for{b in demiL} {
	for{i in N}{
		if m1_2[(nbrePieds/2) + b, i] = 1 then {
			if i=0 then {}
			else {printf " %s", index[i];}
		}
	}
}

printf "\n";

for {b in L} {
	for{i in N} {
		if m2_1[b, i] = 1 then {
			if i=0 then {}
			else {printf " %s", index[i];}
		}
	}
}

for{b in demiL} {
	for{i in N}{
		if m2_2[(nbrePieds/2) + b, i] = 1 then {
			if i=0 then {}
			else {printf " %s", index[i];}
		}
	}
}

printf "\n";
